iris[iris$Species == "virginica"]
iris[iris[["Species"]] == "virginica"]
iris[["Species"]]
iris[["Species"]] == "virginica"
good <- iris[["Species"]] == "virginica"
iris[good]
iris
iris[good,]
iris[iris[["Species"]] == "virginica",]
lapply(iris,mean)
sapply(iris,mean)
split(iris,iris$Species == "virginica")
lapply(split(iris,iris$Species == "virginica"),mean)
colMeans(iris)
colMeans(iris[1:4,])
iris[1:4,]
iris[,1:4]
colMeans(iris[,1:4])
?apply
?lapply
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica",]
mean(iris[iris$Species == virginica,1])
mean(iris[iris$Species == "virginica",1])
mean(iris[iris$Species == "virginica",][["Sepal.Length"]])
iris$Species
tapply(iris,iris$Species)
tapply(iris,iris$mean,mean)
tapply(iris$Sepal.Length,iris$mean,mean)
tapply(iris$Sepal.Length,iris$mean)
tapply(iris$Sepal.Length,iris$mean)
split(iris,iris$Species)
sapply(split(iris,iris$Species),mean)
lapply(split(iris,iris$Species),mean)
apply(iris[,1:4],mean)
apply(iris[,1:4],2,mean)
data(mtcars)
mtcars
search()
lapply(mtcars$mpg,split(mtcars$cyl,mean)
fdg
lapply(mtcars$mpg,split(mtcars$cyl,mean)
ff
lapply(mtcars$mpg,split(mtcars$cyl,mean))
split(mtcars$cyl,mean)
split(mt$mpg,mtcars$cyl,mean)
split(mtcars$mpg,mtcars$cyl,mean)
lapply(split(mtcars$mpg,mtcars$cyl,mean),mean)
apply(mtcars,2,mean)
sapply(mtcars,cyl,mean)
sapply(mtcars,mtcars$cyl,mean)
sapply(mtcars$mpg,mtcars$cyl,mean)
sapply(mtcars$mpg,mtcars$cyl,mean)
mean(mtcars$mpg)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
lapply(split(mtcars$mpg,mtcars$cyl,mean),mean)
sapply(split(mtcars$mpg,mtcars$cyl,mean),mean)
with(mtcars,tapply(mpg,cyl,mean))
mtcars[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4,1]
mtcars[mtcars$cyl == 4,][["hp"]]
mtcars[mtcars$cyl == 4,]$hp
mtcars[mtcars$cyl == 4,"hp"]
mean(mtcars[mtcars$cyl == 4,"hp"])
mean(mtcars[mtcars$cyl == 8,"hp"])
mean(mtcars[mtcars$cyl == 4,"hp"])-mtcars[mtcars$cyl == 8,"hp"]
mean(mtcars[mtcars$cyl == 4,"hp"])-mean(mtcars[mtcars$cyl == 8,"hp"])
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
file.exists(activityLabelsFile){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,nrows = 1)
}
activityLabelsFile
file.exists(activityLabelsFile)
getwd()
setwd("~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData")
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
file.exists(activityLabelsFile){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,nrows = 1)
}
file.exists(activityLabelsFile)
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
file.exists(activityLabelsFile){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,nrows = 1)
}
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,nrows = 1)
}
activityLabels
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F)
}
activityLabels
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activitylabels"))
}
activityLabels
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
featuresFile = paste0(testDataPath,"\\features.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}
features
str(features)
length(features)
length(unique(features))
duplicates(features)
duplicated(features)
features(duplicated(features))
features[duplicated(features)]
features[which(duplicated(features))]
features[1:20]
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activity"))
activityLabels
if(file.exists(testSubjectFile)){
testSubjects = read.table(testSubjectFile,sep = "",header = F,col.names = c("subject"))
}
testSubjects
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
featuresFile = paste0(testDataPath,"\\features.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activity"))
}
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}
if(file.exists(testSubjectFile)){
testSubjects = read.table(testSubjectFile,sep = "",header = F,col.names = c("subject"))
}
if(file.exists(testXFile)){
testXData = read.table(testXFile,sep = "",header = F,col.names = features)
}
head(testXData)
names(testXData)
head(testXData$fBodyAcc.bandsEnergy...1.16)
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F)
}
head(testYData)
testData = merge(testYData,testXData)
length(testYData)
length(testYData[[1]])
length(testXData[[1]])
testData = cbind(testYData,testXData)
head(testData)
length(testSubjects)
length(testSubjects[[1]])
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
featuresFile = paste0(testDataPath,"\\features.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activity"))
}
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}
if(file.exists(testSubjectFile)){
testSubjects = read.table(testSubjectFile,sep = "",header = F,col.names = c("subject"))
}
if(file.exists(testXFile)){
testXData = read.table(testXFile,sep = "",header = F,col.names = features)
}
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F,row.names = c("activity"))
}
testData = cbind(testSubjects,testYData,testXData)
testYData = read.table(testYFile,sep = "",header = F,row.names = c("activity"))
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F,row.names = c("activity"))
}
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F,col.names = c("activity"))
}
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
featuresFile = paste0(testDataPath,"\\features.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activity"))
}
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}
if(file.exists(testSubjectFile)){
testSubjects = read.table(testSubjectFile,sep = "",header = F,col.names = c("subject"))
}
if(file.exists(testXFile)){
testXData = read.table(testXFile,sep = "",header = F,col.names = features)
}
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F,col.names = c("activity"))
}
testData = cbind(testSubjects,testYData,testXData)
testDataPath = "..\\UCI HAR Dataset"
activityLabelsFile = paste0(testDataPath,"\\activity_labels.txt")
featuresFile = paste0(testDataPath,"\\features.txt")
testSubjectFile = paste0(testDataPath,"\\test\\subject_test.txt")
testXFile = paste0(testDataPath,"\\test\\X_test.txt")
testYFile = paste0(testDataPath,"\\test\\Y_test.txt")
trainSubjectFile = paste0(testDataPath,"\\train\\subject_train.txt")
trainXFile = paste0(testDataPath,"\\train\\X_train.txt")
trainYFile = paste0(testDataPath,"\\train\\Y_train.txt")
if(file.exists(activityLabelsFile)){
activityLabels = read.table(activityLabelsFile,sep = "",header = F,col.names = c("id","activity"))
}else{
stop(paste0("File does not exist: ",activityLabelsFile))
}
if(file.exists(featuresFile)){
features = read.table(featuresFile,sep = "",header = F,col.names = c("id","feature"))[[2]]
}else{
stop(paste0("File does not exist: ",featuresFile))
}
if(file.exists(testSubjectFile)){
testSubjects = read.table(testSubjectFile,sep = "",header = F,col.names = c("subject"))
}else{
stop(paste0("File does not exist: ",testSubjectFile))
}
if(file.exists(testXFile)){
testXData = read.table(testXFile,sep = "",header = F,col.names = features)
}else{
stop(paste0("File does not exist: ",testXFile))
}
if(file.exists(testYFile)){
testYData = read.table(testYFile,sep = "",header = F,col.names = c("activity"))
}else{
stop(paste0("File does not exist: ",testYFile))
}
if(file.exists(trainSubjectFile)){
trainSubjects = read.table(trainSubjectFile,sep = "",header = F,col.names = c("subject"))
}else{
stop(paste0("File does not exist: ",testSubjectFile))
}
if(file.exists(trainXFile)){
trainXData = read.table(trainXFile,sep = "",header = F,col.names = features)
}else{
stop(paste0("File does not exist: ",testXFile))
}
if(file.exists(trainYFile)){
trainYData = read.table(trainYFile,sep = "",header = F,col.names = c("activity"))
}else{
stop(paste0("File does not exist: ",testYFile))
}
testData = cbind(testSubjects,testYData,testXData)
trainData = cbind(trainSubjects,trainYData,trainXData)
allData = rbind(testData,trainData)
names(allData)
grep(names(allData),"mean")
grep("mean",names(allData))
names(allData)[grep("mean",names(allData))]
names(allData)[grep("std",names(allData))]
names(allData)[grep("mean...",names(allData))]
names(allData)[grep("\"mean...\"",names(allData))]
names(allData)[grep("'mean...'",names(allData))]
names(allData)[grep("mean\.\.\.",names(allData))]
names(allData)[grep("mean\.",names(allData))]
names(allData)[grep("mean\\.",names(allData))]
names(allData)[grep("std\\.",names(allData))]
names(allData)[grep("(mean\\.)(std\\.)",names(allData))]
names(allData)[grep("(mean\\.)|(std\\.)",names(allData))]
#Combine the quantitave data with the qualititative variables - for the test data set
testData = cbind(testSubjects,testYData,testXData)
#Combine the quantitave data with the qualititative variables - for the train data set
trainData = cbind(trainSubjects,trainYData,trainXData)
#Merge or append the test and train data sets
allData = rbind(testData,trainData)
#Extract only the mean and std for all the variables
meanStdData = alldata[,grep("(mean\\.)|(std\\.)",names(allData))]
#Clean up the workspace to conserve memory
rm(allData,testData,trainData)
#Combine the quantitave data with the qualititative variables - for the test data set
testData = cbind(testSubjects,testYData,testXData)
#Combine the quantitave data with the qualititative variables - for the train data set
trainData = cbind(trainSubjects,trainYData,trainXData)
#Merge or append the test and train data sets
allData = rbind(testData,trainData)
#Extract only the mean and std for all the variables
meanStdData = allData[,grep("(mean\\.)|(std\\.)",names(allData))]
#Clean up the workspace to conserve memory
rm(allData,testData,trainData)
#Combine the quantitave data with the qualititative variables - for the test data set
testData = cbind(testSubjects,testYData,testXData)
#Combine the quantitave data with the qualititative variables - for the train data set
trainData = cbind(trainSubjects,trainYData,trainXData)
#Merge or append the test and train data sets
allData = rbind(testData,trainData)
#Extract only the mean and std for all the variables
meanStdData = allData[,grep("(mean\\.)|(std\\.)",names(allData))]
#Clean up the workspace to conserve memory
rm(allData,testData,trainData)
trainXData
head(trainXData)
?rm
aa = 1:10
rm(aa)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/MergeData.R')
ls()
globalenv()
is.environment(x)
is.environment(testYData)
exists(trainYData)
exists("trainYData")
exists("trainZData")
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/MergeData.R')
head(cleanData)
names(cleanData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
testData = cbind(testSubjects,testYData,testXData)
head(testData)
#Merge or append the test and train data sets
allData = rbind(testData,trainData)
#Extract only the mean and std for all the variables
cleanData = allData[c(1:2,grep("(mean\\.)|(std\\.)",names(allData)))]
allData = rbind(testData,trainData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
names(cleanData)
summary(cleanData)
max(activity)
str(cleanData)
activityLabels
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
str(cleanData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
str(cleanData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
str(cleanData)
activityLabels
cleanData = merge(cleanData,activityLabels)
str(cleanData)
?merge
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
str(cleanData)
activityLabels
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
newData = merge(cleanData,activityLabels)
str(newData)
summary(newData)
summary(newData,na.omit = F)
head(cleanData)
colSums(is.na(cleanData))
length(cleanData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
length(testXData)
length(trainXData)
length(trainXData[[1]])
length(testXData[[1]])
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
cleanData
length(cleanData[[1]])
sum(is.na(cleanData$activity_id))
length(cleanData[[1]])
newData = merge(cleanData,activityLabels)
length(newData[[1]])
table(newData$activity_label)
table(newData$activity_label,subject)
table(newData$activity_label,newData$subject)
str(table(newData$activity_label,newData$subject))
table(newData$activity_label,newData$subject)
any(colSums(is.na(cleanData)  == 0))
all(colSums(is.na(cleanData) == 0))
all(colSums(is.na(cleanData)) == 0)
?table
xtabs(. ~ activity_label + subject,mean)
xtabs(. ~ activity_label + subject,cleanData,mean)
xtabs(. ~ activity_label + subject,data = cleanData)
xtabs(tBodyAcc.mean...Y ~ activity_label + subject,data = cleanData)
xtabs(. ~ activity_label + subject,data = newData)
xtabs(tBodyAcc.mean...Y ~ activity_label + subject,data = newData)
sum = xtabs(tBodyAcc.mean...Y ~ activity_label + subject,data = newData)
str(Sum)
str(sum)
sum["LAYING",1]
sum["LAYING",30]
seq_along[[2]]
seq_along(sum)
seq_along(sum[[1]])
seq_along(sum[[2]])
names(newData)
xtabs(tBodyAcc.mean...Y ~ activity_label + subject,data = newData)
library("reshape2", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
newData %>% group_by(activity_label) %>% summarise(mean(tBodyAcc.mean...X))
newData %>% group_by(activity_label) %>% summarise(mean(names(newData)))
newData %>% group_by(activity_label) %>% summarise(mean(tBodyAccJerk.mean...X))
newData %>% group_by(activity_label) %>% summarise(mean(fBodyGyro.mean...X))
newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAccJerk.mean...X))
newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAccJerk.mean...X))
proc = newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAccJerk.mean...X))
str(proc)
proc[1:10,]
proc[proc$activity_label == "LAYING",]
?dplyr::group_by
proc = newData %>% group_by(subject,activity_label) %>% summarise(mean(.))
proc = newData %>% group_by(subject,activity_label) %>% summarise(mean(.()))
proc = newData %>% group_by(subject,activity_label) %>% summarise(mean(ls())
)
newData %>% group_by(subject,activity_label) %>% summarise(mean(ls()))
newData %>% group_by(subject,activity_label) %>% summarise(mean())
newData %>% group_by(subject,activity_label) %>% summarise(mean(1:10))
newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAcc.mean...X),mean(tBodyAcc.mean...Y))
newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAcc.mean...X),mean(tBodyAcc.mean...Y))
newData %>% group_by(subject,activity_label) %>% summarise_at(-(subject:activity_label))
newData %>% group_by(subject,activity_label) %>% summarise_at(-(subject:activity_label),mean)
newData %>% group_by(subject,activity_label)
newData %>% group_by(subject,activity_label) %>% summarise(mean(tBodyAcc.mean...X))
newData %>% group_by(subject,activity_label) %>% summarise_at(-c(activity_id,subject,activity_label))
newData %>% group_by(subject,activity_label) %>% summarise_at(tBodyAcc.mean...X:)
newData %>% group_by(subject,activity_label) %>% summarise_at(tBodyAcc.mean...X:tBodyAccJerk.mean...X)
newData %>% group_by(subject,activity_label)
newData %>% group_by(subject,activity_label) %>% summarise_at(tBodyAcc.mean...X,mean
)
newData %>% group_by(subject,activity_label) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
newData %>% group_by(subject,activity_label) %>% summarise_at(c(tBodyAcc.mean...X,tBodyAcc.mean...Y), mean, na.rm = TRUE)
newData %>% group_by(subject,activity_label) %>% summarise_at(c("tBodyAcc.mean...X","tBodyAcc.mean...Y"), mean, na.rm = TRUE)
newData %>% group_by(subject,activity_label) %>% summarise_at(tBodyAcc.mean...X:, mean, na.rm = TRUE)
newData %>% group_by(subject,activity_label) %>% summarise_at(tBodyAcc.mean...X:tBodyAcc.mean...Y, mean, na.rm = TRUE)
newData %>% group_by(subject,activity_label) %>% summarise_at("tBodyAcc.mean...X":"tBodyAcc.mean...Y", mean, na.rm = TRUE)
newData %>% select(tBodyAcc.mean...X:tBodyAcc.mean...Z)
names(newData)
is.numeric(newData)
is.numeric(newData$tBodyAcc.mean...X)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
summarisedData = cleanData %>% select(-activity_id) %>% group_by(subject,activity_label)
summarisedData = cleanData %>% select(-activity_id)
summarisedData
head(summarisedData)
head(cleanData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/CleanData.R')
summarisedData = cleanData %>% select(-activity_id) %>% group_by(subject,activity_label)
head(summarisedData)
summarisedData = cleanData %>% group_by(subject,activity_label)
head(summarisedData)
summarisedData = cleanData %>% group_by(subject,activity_label) %>% summarise_if(is.numeric,mean)
head(summarisedData)
summarisedData = cleanData %>% group_by(subject,activity_label) %>% summarise_if(is.numeric,mean) %>% select(-activity_id)
names(summarisedData)
head(summarisedData)
any(colSums(is.na(summarisedData)))
any(colSums(is.na(summarisedData)) == 0)
colSums(is.na(summarisedData))
all(colSums(is.na(summarisedData)) == 0)
summary(summarisedData)
str(summarisedData)
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source('~/workspace_R/Getting and Cleaning Data - Week 4/CleaningWearableData/LoadData.R')
source("run_analysis.R")
Sys.setenv("DATA_PATH","dda")
Sys.setenv(DATA_PATH = "sdsd")
Sys.setenv(DATA_PATH = "..\\UCI HAR Dataset")
source("run_analysis.R")
